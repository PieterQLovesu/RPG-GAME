<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picturePotionEQ.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>